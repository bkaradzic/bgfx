name: build

on: [push, pull_request]

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: make test
      run: |
        make -j2 config=sanitize test
        make -j2 config=debug test
        make -j2 config=release test
        make -j2 config=release gltfpack
    - name: make coverage
      run: |
        make -j2 config=coverage test
        find . -type f -name '*.gcno' -exec gcov -p {} +
        sed -i -e "s/#####\(.*\)\(\/\/ unreachable.*\)/    -\1\2/" *.gcov
        bash <(curl -s https://codecov.io/bash) -f 'src#*.gcov' -X search -t ${{secrets.CODECOV_TOKEN}}
    - uses: actions/upload-artifact@v1
      with:
        name: gltfpack-linux
        path: gltfpack

  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: make test
      run: |
        make -j2 config=sanitize test
        make -j2 config=debug test
        make -j2 config=release test
        make -j2 config=release gltfpack
    - name: make iphone
      run: make -j2 config=iphone
    - uses: actions/upload-artifact@v1
      with:
        name: gltfpack-macos
        path: gltfpack

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [Win32, x64]
    steps:
    - uses: actions/checkout@v1
    - name: cmake configure
      run: cmake . -DBUILD_DEMO=ON -DBUILD_TOOLS=ON -A ${{matrix.arch}}
    - name: cmake test
      shell: bash # necessary for fail-fast
      run: |
        cmake --build . -- -property:Configuration=Debug -verbosity:minimal
        Debug/demo.exe demo/pirate.obj
        cmake --build . -- -property:Configuration=Release -verbosity:minimal
        Release/demo.exe demo/pirate.obj
    - uses: actions/upload-artifact@v1
      with:
        name: gltfpack-windows
        path: Release/gltfpack.exe
