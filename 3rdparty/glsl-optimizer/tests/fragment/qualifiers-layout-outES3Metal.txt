#include <metal_stdlib>
using namespace metal;
struct xlatMtlShaderInput {
};
struct xlatMtlShaderOutput {
  float4 final_color0 [[color(0)]];
  float4 final_color1 [[color(1)]];
  float4 final_color2 [[color(2)]];
};
struct xlatMtlShaderUniform {
};
;
fragment xlatMtlShaderOutput xlatMtlMain (xlatMtlShaderInput _mtl_i [[stage_in]], constant xlatMtlShaderUniform& _mtl_u [[buffer(0)]])
{
  xlatMtlShaderOutput _mtl_o;
  _mtl_o.final_color0 = float4(1.0, 0.0, 0.0, 1.0);
  _mtl_o.final_color1 = float4(0.0, 1.0, 0.0, 1.0);
  _mtl_o.final_color2 = float4(0.0, 0.0, 1.0, 1.0);
  return _mtl_o;
}


// stats: 3 alu 0 tex 0 flow
