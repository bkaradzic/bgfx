#include <metal_stdlib>
using namespace metal;
struct xlatMtlShaderInput {
};
struct xlatMtlShaderOutput {
  half4 _fragData_0 [[color(0)]];
  half4 _fragData_1 [[color(1)]];
  half4 _fragData_2 [[color(2)]];
  half4 _fragData_3 [[color(3)]];
};
struct xlatMtlShaderUniform {
};
fragment xlatMtlShaderOutput xlatMtlMain (xlatMtlShaderInput _mtl_i [[stage_in]], constant xlatMtlShaderUniform& _mtl_u [[buffer(0)]])
{
  xlatMtlShaderOutput _mtl_o;
  _mtl_o._fragData_0 = half4(float4(0.0, 0.0, 0.0, 0.0));
  _mtl_o._fragData_1 = half4(float4(0.1, 0.1, 0.1, 0.1));
  _mtl_o._fragData_2 = half4(float4(0.2, 0.2, 0.2, 0.2));
  _mtl_o._fragData_3 = half4(float4(0.3, 0.3, 0.3, 0.3));
  return _mtl_o;
}


// stats: 4 alu 0 tex 0 flow
