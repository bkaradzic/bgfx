uniform sampler2D _BumpSpecMap;
uniform float _Cutoff;
uniform vec4 _LightColor0;
uniform sampler2D _MainTex;
uniform sampler2D _TranslucencyMap;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_TexCoord[0].xy;
  vec3 tmpvar_2;
  tmpvar_2 = gl_TexCoord[1].xyz;
  vec4 c_3;
  float tmpvar_4;
  vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, tmpvar_1);
  vec4 tmpvar_6;
  tmpvar_6 = texture2D (_TranslucencyMap, tmpvar_1);
  tmpvar_4 = (tmpvar_5.w * gl_Color.w);
  vec4 tmpvar_7;
  tmpvar_7 = texture2D (_BumpSpecMap, tmpvar_1);
  vec4 normal_8;
  normal_8.xy = ((tmpvar_7.wy * 2.0) - 1.0);
  normal_8.z = sqrt(((1.0 - 
    (normal_8.x * normal_8.x)
  ) - (normal_8.y * normal_8.y)));
  float x_9;
  x_9 = (tmpvar_4 - _Cutoff);
  if ((x_9 < 0.0)) {
    discard;
  };
  vec4 c_10;
  vec3 col_11;
  float tmpvar_12;
  tmpvar_12 = dot (normal_8.xyz, tmpvar_2);
  float tmpvar_13;
  tmpvar_13 = max (0.0, -(tmpvar_12));
  col_11 = ((tmpvar_5.xyz * gl_Color.xyz) * (max (0.0, 
    ((tmpvar_12 * 0.5) + 0.5)
  ) + (
    (tmpvar_6.xyz * tmpvar_13)
   * 2.0)));
  col_11 = (col_11 + ((
    pow (max (0.0, dot (normal_8.xyz, normalize(
      (tmpvar_2 + normalize(gl_TexCoord[2].xyz))
    ))), (tmpvar_7.x * 128.0))
   * tmpvar_6.w) * (1.0 - 
    clamp (ceil(tmpvar_13), 0.0, 1.0)
  )));
  col_11 = (col_11 * _LightColor0.xyz);
  c_10.xyz = (col_11 * 2.0);
  c_3.xyz = c_10.xyz;
  c_3.w = tmpvar_4;
  gl_FragData[0] = c_3;
}


// stats: 36 alu 4 tex 1 flow
// inputs: 2
//  #0: gl_Color (high float) 4x1 [-1] loc 1
//  #1: gl_TexCoord (high float) 4x1 [3] loc 4
// uniforms: 2 (total size: 0)
//  #0: _Cutoff (high float) 1x1 [-1]
//  #1: _LightColor0 (high float) 4x1 [-1]
// textures: 3
//  #0: _BumpSpecMap (high 2d) 0x0 [-1]
//  #1: _MainTex (high 2d) 0x0 [-1]
//  #2: _TranslucencyMap (high 2d) 0x0 [-1]
