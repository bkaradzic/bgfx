uniform sampler2D _BumpMap;
uniform vec4 _Color;
uniform samplerCube _Cube;
uniform vec4 _LightColor0;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform float _Parallax;
uniform sampler2D _ParallaxMap;
uniform vec4 _ReflectColor;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1 = gl_TexCoord[0];
  vec4 tmpvar_2;
  tmpvar_2 = gl_TexCoord[3];
  vec4 c_3;
  vec3 tmpvar_4;
  vec2 tmpvar_5;
  vec3 v_6;
  vec3 tmpvar_7;
  tmpvar_7 = normalize(gl_TexCoord[1].xyz);
  v_6.xy = tmpvar_7.xy;
  v_6.z = (tmpvar_7.z + 0.42);
  tmpvar_5 = (((texture2D (_ParallaxMap, tmpvar_1.zw).w * _Parallax) - (_Parallax / 2.0)) * (tmpvar_7.xy / v_6.z));
  vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, (tmpvar_1.xy + tmpvar_5));
  vec4 normal_9;
  normal_9.xy = ((texture2D (_BumpMap, (tmpvar_1.zw + tmpvar_5)).wy * 2.0) - 1.0);
  normal_9.z = sqrt(((1.0 - 
    (normal_9.x * normal_9.x)
  ) - (normal_9.y * normal_9.y)));
  vec4 c_10;
  c_10.xyz = (((tmpvar_8 * _Color).xyz * _LightColor0.xyz) * ((
    max (0.0, dot (normal_9.xyz, normalize(gl_TexCoord[2].xyz)))
   * 
    ((float((tmpvar_2.z > 0.0)) * texture2D (_LightTexture0, ((tmpvar_2.xy / tmpvar_2.w) + 0.5)).w) * texture2D (_LightTextureB0, vec2(dot (tmpvar_2.xyz, tmpvar_2.xyz))).w)
  ) * 2.0));
  c_10.w = ((textureCube (_Cube, tmpvar_4) * tmpvar_8.w).w * _ReflectColor.w);
  c_3.xyz = c_10.xyz;
  c_3.w = 0.0;
  gl_FragData[0] = c_3;
}


// stats: 34 alu 6 tex 0 flow
// inputs: 1
//  #0: gl_TexCoord (high float) 4x1 [4] loc 4
// uniforms: 4 (total size: 0)
//  #0: _Color (high float) 4x1 [-1]
//  #1: _LightColor0 (high float) 4x1 [-1]
//  #2: _Parallax (high float) 1x1 [-1]
//  #3: _ReflectColor (high float) 4x1 [-1]
// textures: 6
//  #0: _BumpMap (high 2d) 0x0 [-1]
//  #1: _Cube (high cube) 0x0 [-1]
//  #2: _LightTexture0 (high 2d) 0x0 [-1]
//  #3: _LightTextureB0 (high 2d) 0x0 [-1]
//  #4: _MainTex (high 2d) 0x0 [-1]
//  #5: _ParallaxMap (high 2d) 0x0 [-1]
