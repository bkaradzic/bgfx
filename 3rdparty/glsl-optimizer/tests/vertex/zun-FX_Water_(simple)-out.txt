uniform vec4 _WaveOffset;
uniform float _WaveScale;
uniform mat4 _World2Object;
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 unity_Scale;
varying vec4 xlv_FOG;
void main ()
{
  vec4 temp_1;
  vec4 pos_2;
  pos_2 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  temp_1 = ((gl_Vertex.xzxz * _WaveScale) + _WaveOffset);
  vec4 tmpvar_3;
  tmpvar_3.w = 1.0;
  tmpvar_3.xyz = _WorldSpaceCameraPos;
  gl_Position = pos_2;
  vec4 tmpvar_4;
  tmpvar_4.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_4.x = pos_2.z;
  xlv_FOG = tmpvar_4;
  vec4 tmpvar_5;
  tmpvar_5.zw = vec2(0.0, 0.0);
  tmpvar_5.xy = (temp_1.xy * vec2(0.4, 0.45));
  gl_TexCoord[0] = tmpvar_5;
  vec4 tmpvar_6;
  tmpvar_6.zw = vec2(0.0, 0.0);
  tmpvar_6.xy = temp_1.wz;
  gl_TexCoord[1] = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7.w = 0.0;
  tmpvar_7.xyz = normalize(((
    (_World2Object * tmpvar_3)
  .xyz * unity_Scale.w) - gl_Vertex.xyz)).xzy;
  gl_TexCoord[2] = tmpvar_7;
}


// stats: 13 alu 0 tex 0 flow
// inputs: 1
//  #0: gl_Vertex (high float) 4x1 [-1] loc 0
// uniforms: 6 (total size: 0)
//  #0: gl_ModelViewProjectionMatrix (high float) 4x4 [-1]
//  #1: _WaveOffset (high float) 4x1 [-1]
//  #2: _WaveScale (high float) 1x1 [-1]
//  #3: _World2Object (high float) 4x4 [-1]
//  #4: _WorldSpaceCameraPos (high float) 3x1 [-1]
//  #5: unity_Scale (high float) 4x1 [-1]
