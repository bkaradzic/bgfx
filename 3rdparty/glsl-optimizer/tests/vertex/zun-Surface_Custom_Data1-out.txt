uniform mat4 _LightMatrix0;
uniform mat4 _Object2World;
uniform vec4 _WorldSpaceLightPos0;
uniform vec4 unity_Scale;
varying vec4 xlv_FOG;
void main ()
{
  vec4 pos_1;
  pos_1 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  mat3 tmpvar_2;
  tmpvar_2[0] = _Object2World[0].xyz;
  tmpvar_2[1] = _Object2World[1].xyz;
  tmpvar_2[2] = _Object2World[2].xyz;
  gl_Position = pos_1;
  vec4 tmpvar_3;
  tmpvar_3.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_3.x = pos_1.z;
  xlv_FOG = tmpvar_3;
  vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xyz = ((gl_Normal * 0.5) + 0.5);
  gl_TexCoord[0] = tmpvar_4;
  vec4 tmpvar_5;
  tmpvar_5.w = 0.0;
  tmpvar_5.xyz = (tmpvar_2 * (gl_Normal * unity_Scale.w));
  gl_TexCoord[1] = tmpvar_5;
  vec4 tmpvar_6;
  tmpvar_6.w = 0.0;
  tmpvar_6.xyz = _WorldSpaceLightPos0.xyz;
  gl_TexCoord[2] = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7.zw = vec2(0.0, 0.0);
  tmpvar_7.xy = (_LightMatrix0 * (_Object2World * gl_Vertex)).xy;
  gl_TexCoord[3] = tmpvar_7;
}


// stats: 12 alu 0 tex 0 flow
// inputs: 2
//  #0: gl_Normal (high float) 3x1 [-1] loc 2
//  #1: gl_Vertex (high float) 4x1 [-1] loc 0
// uniforms: 5 (total size: 0)
//  #0: gl_ModelViewProjectionMatrix (high float) 4x4 [-1]
//  #1: _LightMatrix0 (high float) 4x4 [-1]
//  #2: _Object2World (high float) 4x4 [-1]
//  #3: _WorldSpaceLightPos0 (high float) 4x1 [-1]
//  #4: unity_Scale (high float) 4x1 [-1]
