void main ()
{
  mat3 tmpvar_1;
  tmpvar_1[0] = gl_ModelViewMatrixInverseTranspose[0].xyz;
  tmpvar_1[1] = gl_ModelViewMatrixInverseTranspose[1].xyz;
  tmpvar_1[2] = gl_ModelViewMatrixInverseTranspose[2].xyz;
  vec4 tmpvar_2;
  tmpvar_2.w = 1.0;
  tmpvar_2.xyz = (((tmpvar_1 * gl_Normal) * 0.5) + 0.5);
  gl_Position = (gl_ModelViewProjectionMatrix * gl_Vertex);
  gl_FrontColor = tmpvar_2;
}


// stats: 5 alu 0 tex 0 flow
// inputs: 2
//  #0: gl_Normal (high float) 3x1 [-1] loc 2
//  #1: gl_Vertex (high float) 4x1 [-1] loc 0
// uniforms: 2 (total size: 0)
//  #0: gl_ModelViewMatrixInverseTranspose (high float) 4x4 [-1]
//  #1: gl_ModelViewProjectionMatrix (high float) 4x4 [-1]
