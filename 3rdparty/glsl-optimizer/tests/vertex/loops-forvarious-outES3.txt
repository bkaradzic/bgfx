#version 300 es
uniform highp mat4 UNITY_MATRIX_MVP;
uniform highp vec4 unity_LightAtten[4];
uniform highp vec4 unity_LightColor[4];
in highp vec4 _inVertex;
out mediump vec4 xlv_TEXCOORD0;
void main ()
{
  highp vec4 l_1_1;
  highp vec4 l_2;
  mediump vec4 tmpvar_3;
  mediump vec4 tmpvar_4;
  tmpvar_3 = (UNITY_MATRIX_MVP * _inVertex);
  tmpvar_4 = unity_LightColor[0];
  tmpvar_4 = (tmpvar_4 + unity_LightColor[1]);
  tmpvar_4 = (tmpvar_4 + unity_LightColor[0]);
  tmpvar_4 = (tmpvar_4 + unity_LightColor[1]);
  tmpvar_4 = (tmpvar_4 + unity_LightColor[2]);
  tmpvar_4 = (tmpvar_4 + unity_LightColor[3]);
  tmpvar_4 = (tmpvar_4 + unity_LightColor[3]);
  tmpvar_4 = (tmpvar_4 + unity_LightColor[2]);
  tmpvar_4 = (tmpvar_4 + unity_LightColor[1]);
  tmpvar_4 = (tmpvar_4 + unity_LightColor[0]);
  l_2 = (unity_LightColor[0] * unity_LightAtten[0].x);
  tmpvar_4 = (tmpvar_4 + l_2);
  l_2 = (unity_LightColor[1] * unity_LightAtten[1].x);
  tmpvar_4 = (tmpvar_4 + l_2);
  l_1_1 = (unity_LightColor[0] * unity_LightAtten[0].z);
  tmpvar_4 = (tmpvar_4 + l_1_1);
  l_1_1 = (unity_LightColor[1] * unity_LightAtten[1].z);
  tmpvar_4 = (tmpvar_4 + l_1_1);
  tmpvar_4 = (tmpvar_4 + unity_LightColor[1].x);
  tmpvar_4 = (tmpvar_4 + unity_LightColor[2].x);
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_4;
}


// stats: 20 alu 0 tex 0 flow
// inputs: 1
//  #0: _inVertex (high float) 4x1 [-1]
// uniforms: 3 (total size: 0)
//  #0: UNITY_MATRIX_MVP (high float) 4x4 [-1]
//  #1: unity_LightAtten (high float) 4x1 [4]
//  #2: unity_LightColor (high float) 4x1 [4]
